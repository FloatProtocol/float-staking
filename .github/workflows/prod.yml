name: Production CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    env:
      ETH_NODE_URI: ${{ secrets.ETH_NODE_URI }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/setup-node@v2
        with:
          node-version: 12
      - run: yarn
      - run: yarn lint

  test:
    runs-on: ubuntu-latest
    env:
      ETH_NODE_URI: ${{ secrets.ETH_NODE_URI }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/setup-node@v2
        with:
          node-version: 12
      - run: yarn
      - run: yarn test

  coverage:
    runs-on: ubuntu-latest
    env:
      ETH_NODE_URI: ${{ secrets.ETH_NODE_URI }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/setup-node@v2
        with:
          node-version: 12
      - run: yarn
      - run: yarn coverage

  slither:
    runs-on: ubuntu-latest
    env:
      ETH_NODE_URI: ${{ secrets.ETH_NODE_URI }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/setup-node@v2
        with:
          node-version: 12
      - uses: actions/setup-python@v2
        with:
          python-version: "3.x"
      - run: python -m pip install --upgrade pip
      - run: pip3 install slither-analyzer
      - run: slither contracts/ --exclude-informational --exclude-optimization || true
